{"mappings":"iiBAEA,IAAAA,EAAAC,EAAA,SAmBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA1BMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAEN,IAAMZ,EAAQa,SAASC,KAAKC,SAASf,MAAMgB,OACrCC,EAAOJ,SAASC,KAAKC,SAASE,KAAKD,OACnCE,EAASL,SAASC,KAAKC,SAASG,OAAOF,OAEzCG,MAAMnB,IAAUmB,MAAMF,IAASE,MAAMD,GACvCE,EAAAxB,GAASyB,OAAOC,QAAQ,gDAoB5B,SAAwBJ,EAAQlB,EAAOiB,GACrC,IAAK,IAAIM,EAAI,EAAGA,GAAKL,EAAQK,IAC3BzB,EAAcyB,EAAGvB,GACdwB,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAU2B,EAAKD,EAALzB,MACjBoB,EAAAxB,GAASyB,OAAOM,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAANF,EAAM,M,IAEvEG,OAAM,SAAAJ,G,IAAG1B,EAAQ0B,EAAR1B,SAAU2B,EAAKD,EAALzB,MAClBoB,EAAAxB,GAASyB,OAAOC,QAAQ,sBAAqCM,OAAf7B,EAAS,QAAY6B,OAANF,EAAM,M,IAGvE1B,GAASiB,C,CA1BXa,CAAeZ,EAAQlB,EAAOiB,E","sources":["src/js/03-promises.js"],"sourcesContent":["\n\nimport Notiflix from \"notiflix\";\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n  \n  const delay = parseInt(this.elements.delay.value);\n  const step = parseInt(this.elements.step.value);\n  const amount = parseInt(this.elements.amount.value);\n\n  if (isNaN(delay) || isNaN(step) || isNaN(amount)) {\n    Notiflix.Notify.failure('Please fill in all fields with valid numbers');\n    return;\n  }\n\n  createPromises(amount, delay, step);\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction createPromises(amount, delay, step) {\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","parseInt","this","elements","value","step","amount","isNaN","$parcel$interopDefault","Notify","failure","i","then","param","_$delay","success","concat","catch","$ce04d3a99e08e73b$var$createPromises"],"version":3,"file":"03-promises.97627122.js.map"}